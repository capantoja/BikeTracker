/**********************************************************
     ____  _ __      ______                __            
    / __ )(_) /_____/_  __/________ ______/ /_____  _____
   / __  / / //_/ _ \/ / / ___/ __ `/ ___/ //_/ _ \/ ___/
  / /_/ / / ,< /  __/ / / /  / /_/ / /__/ ,< /  __/ /    
 /_____/_/_/|_|\___/_/ /_/   \__,_/\___/_/|_|\___/_/  
 
                    Version 1.0


    ChibiOS/RT - Copyright (C) 2006-2013 Giovanni Di Sirio

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
***********************************************************/ 

#include "ch.h"
#include "hal.h"
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
             

//Declaracion de threads
static WORKING_AREA(blinker, 64);

uint8_t *gps_data = NULL;

/*  Thread para el led blink que indica que el sistema esta en modo RUN */

static msg_t Blink_LED(void *arg) 
{
  (void)arg;
  
  while (TRUE) {
    palSetPad(GPIOA, GPIOA_LED);     
    chThdSleepMilliseconds(500);
    palClearPad(GPIOA, GPIOA_LED);     
    chThdSleepMilliseconds(500);
  }
  return 0;
}
  




void InicializaGSM(){
 /* Activa GSM */
  palSetPad(GPIOA, GPIOA_ON_GSM);
  chThdSleepMilliseconds(3000);
  palClearPad(GPIOA, GPIOA_ON_GSM);
  chThdSleepMilliseconds(3000);


}

int main(void) {

  halInit();
  chSysInit(); 
   
                                                                                                                                                                                                                                                                                                       
  chThdSleepMilliseconds(100);
  
  /* Inicializa Thread para el blink led */
  chThdCreateStatic(blinker, sizeof(blinker), NORMALPRIO, Blink_LED, NULL);  // Blinker Thread
  
  /* Pin SAO = 0 */
  palClearPad(GPIOB, GPIOB_PIN_SAO);
   /* Activa GPS */
  palClearPad(GPIOA, GPIOA_ON_GPS);
  /* Activa serial para GSM */ 
  palClearPad(GPIOA, 3);
  palSetPad(GPIOF, 7);


  InicializaGSM();



  while (TRUE) {



  }
}
